name: CI/CD - NGINX Helm

on:
  workflow_dispatch:
    inputs:
      go-nogo-id:
        description: 'Enter Go-NoGo ID'
        required: true
      change-request-id:
        description: 'Enter Change Request ID'
        required: true

env:
  REGION: us-central1
  PROJECT: my-new-env
  IMAGE: us-central1-docker.pkg.dev/my-new-env/nginx-images/nginx-dev:latest

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up GCP Auth
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t $IMAGE .

      - name: Push Docker Image
        run: |
          docker push $IMAGE

  static-analysis:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate with GCP
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Docker Pull Image
        run: |
          docker pull $IMAGE

      - name: Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE }}'

  test:
    needs: static-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Run Simple Test
        run: echo "✅ Tests Passed"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://34.118.226.69
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GKE
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > key.json
          gcloud auth activate-service-account --key-file=key.json
          gcloud config set project my-new-env
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }}

      - name: Helm Upgrade
        run: |
          helm upgrade --install nginx-dev ./charts/nginx-dev -n dev --create-namespace

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "channel": "#devops-alerts",
              "username": "GitHub CI",
              "text": "✅ *Deployment successful*: nginx-dev was deployed to `${{ secrets.GKE_CLUSTER }}` in project `${{ env.PROJECT }}`",
              "icon_emoji": ":rocket:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
