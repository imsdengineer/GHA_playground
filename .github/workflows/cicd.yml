# V 1.0.0           Imran Ali             05-20-2025            Initial  NGINX  CI/CD Workflow to GKE cluster

name: NGINX CI/CD deployment to GKE cluster

on:
  workflow_dispatch:
    inputs:
      go-no-id:
        description: 'Go/No-Go Identifier'
        required: true
      change-id:
        description: 'Change Request ID'
        required: true

env:
  PROJECT_ID: kkgcplabs01-008
  REGION: us-central1
  CLUSTER_NAME: poc-k8s
  CLUSTER_ZONE: us-central1-c
  NAMESPACE: dev
  IMAGE_NAME: nginx-custom
  GAR_REPO: nginx-images

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE --project $PROJECT_ID

      - name: Create Namespace (if not exists)
        run: |
          kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy NGINX to GKE
        run: |
          kubectl apply -n $NAMESPACE -f - <<EOF
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx-dev
            labels:
              app: nginx
              env: dev
              owner: Imran
              role: admin
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: nginx
            template:
              metadata:
                labels:
                  app: nginx
                  env: dev
                  owner: Imran
                  role: admin
              spec:
                containers:
                - name: nginx
                  image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}:latest
                  ports:
                  - containerPort: 80
          EOF

      - name: Expose via NodePort
        run: |
          kubectl apply -n $NAMESPACE -f - <<EOF
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx-nodeport
          spec:
            type: NodePort
            selector:
              app: nginx
            ports:
              - port: 80
                targetPort: 80
                nodePort: 30080
          EOF

      - name: Print Deployment Info
        run: |
          echo "Go/No-Go ID: ${{ github.event.inputs.go-no-id }}"
          echo "Change ID: ${{ github.event.inputs.change-id }}"
          kubectl get pods -n $NAMESPACE
          kubectl get svc -n $NAMESPACE nginx-nodeport
